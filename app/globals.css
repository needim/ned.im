@import "tailwindcss";
@import "tw-animate-css";
@plugin "@tailwindcss/typography";

@custom-variant dark (&:is(.dark *));

@theme {
	--font-sans: var(--font-geist-sans);
	--font-mono: var(--font-geist-mono);
	--font-serif: var(--font-lexend);

	--text-xxs: 0.625rem;

	--color-border: hsl(var(--border));
	--color-input: hsl(var(--input));
	--color-ring: hsl(var(--ring));
	--color-background: hsl(var(--background));
	--color-foreground: hsl(var(--foreground));

	--color-primary: hsl(var(--primary));
	--color-primary-foreground: hsl(var(--primary-foreground));

	--color-secondary: hsl(var(--secondary));
	--color-secondary-foreground: hsl(var(--secondary-foreground));

	--color-destructive: hsl(var(--destructive));
	--color-destructive-foreground: hsl(var(--destructive-foreground));

	--color-muted: hsl(var(--muted));
	--color-muted-foreground: hsl(var(--muted-foreground));

	--color-accent: hsl(var(--accent));
	--color-accent-foreground: hsl(var(--accent-foreground));

	--color-popover: hsl(var(--popover));
	--color-popover-foreground: hsl(var(--popover-foreground));

	--color-card: hsl(var(--card));
	--color-card-foreground: hsl(var(--card-foreground));

	--animate-accordion-down: accordion-down 0.2s ease-out;
	--animate-accordion-up: accordion-up 0.2s ease-out;

	@keyframes accordion-down {
		from {
			height: 0;
		}
		to {
			height: var(--radix-accordion-content-height);
		}
	}
	@keyframes accordion-up {
		from {
			height: var(--radix-accordion-content-height);
		}
		to {
			height: 0;
		}
	}
}

@utility container {
	margin-inline: auto;
	padding-inline: 2rem;
	@media (width >= --theme(--breakpoint-sm)) {
		max-width: none;
	}
	@media (width >= 1400px) {
		max-width: 1400px;
	}
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
	*,
	::after,
	::before,
	::backdrop,
	::file-selector-button {
		border-color: var(--color-zinc-200, currentColor);
	}
}

@utility debug {
	@apply outline-dashed outline-red-500/75;
}

@utility shadow-polaroid {
	@apply shadow-[0px_0px_0px_1px_rgba(0,0,0,0.06),0px_1px_1px_-0.5px_rgba(0,0,0,0.06),0px_3px_3px_-1.5px_rgba(0,0,0,0.06),_0px_6px_6px_-3px_rgba(0,0,0,0.06),0px_12px_12px_-6px_rgba(0,0,0,0.06),0px_24px_24px_-12px_rgba(0,0,0,0.06)];
}

@utility faded-border {
	background: radial-gradient(
		49.41% 64.58% at 49.4% 0,
		hsla(0, 0%, 50%, 0.03) 0,
		hsla(0, 0%, 50%, 0) 100%
	);
	border-top: 1px solid;
	border-image-source: linear-gradient(
		90deg,
		transparent 0,
		hsla(0, 0%, 50%, 0.19) 30%,
		hsla(0, 0%, 50%, 0.19) 70%,
		transparent
	);
	border-image-slice: 1;
	.dark & {
		background: radial-gradient(
			49.41% 64.58% at 49.4% 0,
			hsla(0, 0%, 50%, 0.03) 0,
			hsla(0, 0%, 50%, 0) 100%
		);
		border-top: 1px solid;
		border-image-source: linear-gradient(
			90deg,
			transparent 0,
			hsla(0, 0%, 50%, 0.19) 30%,
			hsla(0, 0%, 50%, 0.19) 70%,
			transparent
		);
		border-image-slice: 1;
	}
}

@utility dark {
	& .faded-border {
		background: radial-gradient(
			49.41% 64.58% at 49.4% 0,
			hsla(0, 0%, 50%, 0.03) 0,
			hsla(0, 0%, 50%, 0) 100%
		);
		border-top: 1px solid;
		border-image-source: linear-gradient(
			90deg,
			transparent 0,
			hsla(0, 0%, 50%, 0.19) 30%,
			hsla(0, 0%, 50%, 0.19) 70%,
			transparent
		);
		border-image-slice: 1;
	}
}

@layer base {
	:root {
		--background: 210 40% 98%;
		--foreground: 240 10% 3.9%;

		--card: 0 0% 100%;
		--card-foreground: 240 10% 3.9%;

		--popover: 0 0% 100%;
		--popover-foreground: 240 10% 3.9%;

		--primary: 240 5.9% 10%;
		--primary-foreground: 0 0% 98%;

		--secondary: 240 4.8% 95.9%;
		--secondary-foreground: 240 5.9% 10%;

		--muted: 240 4.8% 95.9%;
		--muted-foreground: 240 3.8% 46.1%;

		--accent: 240 4.8% 95.9%;
		--accent-foreground: 240 5.9% 10%;

		--destructive: 0 84.2% 60.2%;
		--destructive-foreground: 0 0% 98%;

		--border: 240 5.9% 90%;
		--input: 240 5.9% 90%;
		--ring: 240 10% 3.9%;

		--radius: 0rem;
	}

	.dark {
		--background: 240 10% 4%;
		--foreground: 0 0% 98%;

		--card: 240 10% 3.9%;
		--card-foreground: 0 0% 98%;

		--popover: 240 3.7% 15.9%;
		--popover-foreground: 0 0% 98%;

		--primary: 0 0% 98%;
		--primary-foreground: 240 5.9% 10%;

		--secondary: 240 3.7% 15.9%;
		--secondary-foreground: 0 0% 98%;

		--muted: 240 3.7% 15.9%;
		--muted-foreground: 240 5% 64.9%;

		--accent: 240 3.7% 15.9%;
		--accent-foreground: 0 0% 98%;

		--destructive: 0 62.8% 30.6%;
		--destructive-foreground: 0 0% 98%;

		--border: 240 3.7% 15.9%;
		--input: 240 3.7% 15.9%;
		--ring: 240 4.9% 83.9%;
	}
}

@layer base {
	* {
		@apply border-border;
	}
	html {
		@apply antialiased min-h-screen bg-background text-foreground font-sans;
	}
	body {
		@apply min-h-screen font-sans bg-background text-foreground;
	}
	h1,
	h2,
	h3,
	h4,
	h5,
	h6 {
		@apply font-serif font-medium! tracking-tight;
	}

	.pro {
		@apply prose prose-zinc dark:prose-invert;
	}

	a {
		@apply underline-offset-4;
	}

	blockquote {
		@apply not-italic! font-normal!;
	}
}

#carbon-responsive .carbon-responsive-wrap {
	border-radius: var(--radius);
	border: 1px solid hsl(var(--border)) !important;
}

.dark #carbon-responsive .carbon-responsive-wrap {
	background: hsl(var(--background));
}

.dark #carbon-responsive a,
#carbon-responsive a:hover {
	color: var(--primary);
}
